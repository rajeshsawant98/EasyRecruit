// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package pdfparsertesting.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import pdfparser.impl.PdfParser;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.util.regex.*;

/**
 * Retrieves the content of a PDF file and returns it as a string.
 */
public class GetExperienceTechnologies extends CustomJavaAction<java.lang.String>
{
	private IMendixObject __inputFile;
	private system.proxies.FileDocument inputFile;

	public GetExperienceTechnologies(IContext context, IMendixObject inputFile)
	{
		super(context);
		this.__inputFile = inputFile;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		this.inputFile = this.__inputFile == null ? null : system.proxies.FileDocument.initialize(getContext(), __inputFile);

		// BEGIN USER CODE
		IContext context = this.context(); 											// Return Mendix context

		if (inputFile != null && inputFile.getHasContents(context)) {
			PdfParser pdfParser = new PdfParser(); 									// Instantiates the PDF parser class
			String content= pdfParser.getContent(__inputFile, context);
			String regex="(?s)Total\\sExperience(.*)Project\\sDetails";
			 Matcher m = Pattern.compile(regex).matcher(content);
		     String obj="" ;
		     String objective="Total Experience";
		     String blank="";
		      while (m.find()) 
		      { 
		          obj=obj+(m.group());
		          
		      }
		    obj=obj.replace(objective, blank);
		    String[] n=obj.split(":");
		     obj=n[n.length-1];
		     String objective1="Project Details";
		     obj=obj.replace(objective1, blank);
//		     String[] parts = obj.split(":");
//			 String lastWord = parts[parts.length - 1];
//			 String lastword = lastWord.replaceAll("[^\\d.]", "");
		     return obj;
		}

		else {
			throw new NullPointerException("Empty input file in PDF Parser.");
		}

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetExperienceTechnologies";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
